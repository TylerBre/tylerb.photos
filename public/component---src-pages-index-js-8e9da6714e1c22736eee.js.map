{"version":3,"sources":["webpack:///./src/components/postCard.js","webpack:///./src/pages/index.js"],"names":["props","className","postClass","node","frontmatter","thumbnail","style","backgroundImage","childImageSharp","fluid","src","to","fields","slug","title","BlogIndex","data","siteTitle","site","siteMetadata","posts","allMarkdownRemark","edges","keywords","map","postCounter","key","count","query","render","location"],"mappings":"sLAGeA,KACb,6BACEC,UAAS,6BAA+BD,EAAME,UAArC,KACPF,EAAMG,KAAKC,YAAYC,UAAvB,yBAEFC,MACEN,EAAMG,KAAKC,YAAYC,WAAa,CAClCE,gBAAgB,OAAQP,EAAMG,KAAKC,YAAYC,UAAUG,gBAAgBC,MAAMC,IAAhE,MAInB,kBAAC,OAAD,CAAMC,GAAIX,EAAMG,KAAKS,OAAOC,KAAMZ,UAAU,kBAC1C,yBAAKA,UAAU,qBACb,wBAAIA,UAAU,mBACXD,EAAMG,KAAKC,YAAYU,OAASd,EAAMG,KAAKS,OAAOC,S,oBCJ7D,MAAME,EAAY,IAAe,IAAd,KAAEC,GAAW,EAC9B,MAAMC,EAAYD,EAAKE,KAAKC,aAAaL,MACnCM,EAAQJ,EAAKK,kBAAkBC,MASrC,OACE,kBAAC,IAAD,CAAQR,MAAOG,GACb,kBAAC,IAAD,CAAKH,MAAM,eAAeS,SAVV,CAClB,YACA,cACA,qBACA,mBACA,wBAME,yBAAKtB,UAAU,aACZmB,EAAMI,IAAI,CAAC,EAAUC,KAAiB,IAA3B,KAAEtB,GAAwB,EACpC,OACE,kBAAC,EAAD,CACEuB,IAAKvB,EAAKS,OAAOC,KACjBc,MAAOF,EACPtB,KAAMA,EACND,UAAS,cA0CRF,aACb,kBAAC,cAAD,CACE4B,MAnCY,aAoCZC,OAAQb,GACN,kBAACD,EAAD,eAAWe,SAAU9B,EAAM8B,SAAU9B,OAAK,EAACgB,KAAMA,GAAUhB,O","file":"component---src-pages-index-js-8e9da6714e1c22736eee.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nexport default props => (\n  <article\n    className={`post-card post-card-large ${props.postClass} ${\n      props.node.frontmatter.thumbnail ? `with-image` : `no-image`\n    }`}\n    style={\n      props.node.frontmatter.thumbnail && {\n        backgroundImage: `url(${props.node.frontmatter.thumbnail.childImageSharp.fluid.src})`,\n      }\n    }\n  >\n    <Link to={props.node.fields.slug} className=\"post-card-link\">\n      <div className=\"post-card-content\">\n        <h2 className=\"post-card-title\">\n          {props.node.frontmatter.title || props.node.fields.slug}\n        </h2>\n      </div>\n    </Link>\n  </article>\n)\n","import React from \"react\"\nimport { graphql, StaticQuery } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport PostCard from \"../components/postCard\"\n\n// import \"../utils/global.scss\"\nimport \"../utils/normalize.css\"\nimport \"../utils/css/screen.css\"\n//TODO: switch to staticQuery, get rid of comments,\n// remove unnecessary components, export as draft template\n\nconst BlogIndex = ({ data }) => {\n  const siteTitle = data.site.siteMetadata.title\n  const posts = data.allMarkdownRemark.edges\n  const seoKeywords = [\n    \"portfolio\",\n    \"photography\",\n    \"street photography\",\n    \"film photography\",\n    \"analog photography\",\n  ]\n\n  return (\n    <Layout title={siteTitle}>\n      <SEO title=\"Image Series\" keywords={seoKeywords} />\n      <div className=\"post-feed\">\n        {posts.map(({ node }, postCounter) => {\n          return (\n            <PostCard\n              key={node.fields.slug}\n              count={postCounter}\n              node={node}\n              postClass={`post`}\n            />\n          )\n        })}\n      </div>\n    </Layout>\n  )\n}\n\nconst indexQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            thumbnail {\n              childImageSharp {\n                fluid(maxWidth: 1360) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default props => (\n  <StaticQuery\n    query={indexQuery}\n    render={data => (\n      <BlogIndex location={props.location} props data={data} {...props} />\n    )}\n  />\n)\n"],"sourceRoot":""}